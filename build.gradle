apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildDir = 'Build'

sourceSets {
    main {
        java {
            srcDirs = ['Source']
        }

        resources {
            srcDirs = ['Resources']
        }
    }

    test {
        java {
            srcDirs = ['Test']
        }

        resources {
            srcDirs = ['Resources']
        }
    }
}


repositories {
    mavenCentral()
}

dependencies {
    // Logging.
    compile 'ch.qos.logback:logback-classic:1.1.8'
    compile 'ch.qos.logback:logback-core:1.1.8'
    compile 'org.codehaus.groovy:groovy:2.4.+'

    // CSV parser.
    compile 'com.opencsv:opencsv:3.9'

    // JSON.
    compile 'com.google.code.gson:gson:2.8.+'

    // Reflections.
    compile 'org.reflections:reflections:0.9.+'

    // Freemarker.
    compile 'org.freemarker:freemarker:2.3.+'

    // Test dependencies.
    // JUnit and matchers.
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M3'

    // Mockito.
    testCompile 'org.mockito:mockito-core:2.7.+'

    // Test helpers.
    testCompile 'com.github.stefanbirkner:system-rules:1.16.+'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:2.2.+'
}

checkstyle {
    config = resources.text.fromFile(
            new File(rootProject.rootDir, 'Configuration/Checkstyle/cmpsb_style.xml')
    )

    toolVersion = '7.6'
}

test {
    testLogging.showStandardStreams = true
    testLogging.showExceptions = true
    testLogging.showStackTraces = true
    testLogging.showCauses = true

    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
